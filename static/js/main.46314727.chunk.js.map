{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/Context.tsx/Context.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","React","memo","_ref","movie","_jsxs","className","children","_jsx","src","Poster","alt","Title","Plot","target","rel","href","concat","imdbID","MovieContext","createContext","query","setQuery","movies","onAddMovies","AppProvider","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setMovies","useCallback","newMovie","prevMovies","some","_toConsumableArray","value","useMemo","Provider","MoviesList","useContext","map","FindMovie","_useContext","loading","setLoading","hasError","setHasError","_useState5","_useState6","selectedMovie","setSelectedMovie","useEffect","_Fragment","onSubmit","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieFromServer","finally","htmlFor","type","id","placeholder","cn","onChange","disabled","trim","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46314727.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movie: MovieData,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.Plot}\n          <br />\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://www.imdb.com/title/${movie.imdbID}`}\n            data-cy=\"movieURL\"\n          >\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { MovieData } from '../../types/MovieData';\n\nexport const MovieContext = React.createContext<{\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  onAddMovies: React.Dispatch<React.SetStateAction<MovieData>>,\n  movies: MovieData[],\n}>({\n  query: '',\n  setQuery: () => { },\n  movies: [],\n  onAddMovies: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AppProvider: React.FC<Props> = ({ children }) => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState<MovieData[]>([]);\n\n  const onAddMovies = useCallback((newMovie) => {\n    setMovies(prevMovies => {\n      const exists = prevMovies.some(\n        (movie) => movie.imdbID === newMovie.imdbID,\n      );\n\n      if (exists) {\n        return prevMovies;\n      }\n\n      return [...prevMovies, newMovie];\n    });\n  }, []);\n\n  const value = useMemo(() => ({\n    query,\n    setQuery,\n    movies,\n    onAddMovies,\n  }), [query, movies, onAddMovies]);\n\n  return (\n    <MovieContext.Provider value={value}>\n      {children}\n    </MovieContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieContext } from '../Context.tsx';\n\nexport const MoviesList: React.FC = React.memo(() => {\n  const { movies } = useContext(MovieContext);\n\n  return (\n    <div className=\"movies\">\n      {movies && (\n        movies.map(movie => (\n          <MovieCard\n            key={movie.imdbID}\n            movie={movie}\n          />\n        ))\n      )}\n    </div>\n  );\n});\n","import React, { useContext, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieContext } from '../Context.tsx';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\nexport const FindMovie: React.FC = () => {\n  const { query, setQuery, onAddMovies } = useContext(MovieContext);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState<MovieData | null>(null);\n\n  const addMoviesToList = () => {\n    if (selectedMovie) {\n      onAddMovies(selectedMovie);\n      setSelectedMovie(null);\n      setQuery('');\n    }\n  };\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    return setHasError(false);\n  }, [query]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n\n    getMovie(query)\n      .then((movieFromServer) => {\n        if ('Error' in movieFromServer) {\n          throw new Error();\n        }\n\n        setSelectedMovie({\n          Poster: movieFromServer.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movieFromServer.Poster,\n          Title: movieFromServer.Title,\n          Plot: movieFromServer.Plot,\n          imdbID: movieFromServer.imdbID,\n        });\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': hasError,\n              })}\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!query.trim()}\n            >\n              {selectedMovie ? (\n                'Search again'\n              ) : (\n                'Find a movie'\n              )}\n            </button>\n          </div>\n\n          {selectedMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMoviesToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {selectedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={selectedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=51d416a2';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\nimport { AppProvider } from './components/Context.tsx';\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}